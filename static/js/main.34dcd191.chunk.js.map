{"version":3,"sources":["components/Gamecard.js","components/Wrapper.js","components/Footer.js","components/Title.js","components/Navbar.js","components/game/game.js","components/Landingpage/LandingBtn.js","components/Header.js","components/Landingpage/Landingpage.js","App.js","serviceWorker.js","index.js"],"names":["GameCard","props","react_default","a","createElement","className","onClick","handleClick","id","alt","src","image","Wrapper","children","Footer","href","target","rel","Component","Title","Navbar","changeRoute","topScore","score","Game","state","friends","shuffleData","data","i","length","j","Math","floor","random","temp","resetData","map","item","Object","objectSpread","clicked","_this","handleCorrectGuess","newData","_this$state","newScore","newTopScore","max","setState","handleIncorrectGuess","handleItemClick","guessedCorrectly","console","log","newItem","this","_this2","components_Navbar","components_Title","components_Wrapper","friend","Gamecard","key","components_Footer","LandingBtn","Button","outline","color","Header","Landingpage_LandingBtn","LandingPage","components_Header","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","homeRoute","react_router_dom","Landingpage","game","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34dcd191.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/App.css\";\n\n\nfunction GameCard(props) {\n  return (\n    <div className=\"card\" onClick={ () => props.handleClick(props.id)}>\n      <div className=\"img-container\">\n        <img alt={[]} src={props.image} />\n      </div>\n      \n    \n    </div>\n  );\n}\n\nexport default GameCard;\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport \"../styles/index.css\"\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from 'react';\nimport '../styles/index.css';\n\n\n// const img = './assets/images/reactlogo.svg';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer className='footer'>\n                <div className='bottom'>\n                    <a href='https://github.com/arianamelis' target='_blank' rel='noopener noreferrer'>Ariana Melis || </a>\n                   \n                    <a href='https://github.com/arianamelis' target='_blank' rel='noopener noreferrer'>Portfolio</a>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport \"../styles/index.css\";\nfunction Title(props) {\n  return <title>Click Game</title>\n}\n\nexport default Title;\n","import React from \"react\";\nimport '../styles/index.css';\nimport \"../styles/App.css\";\n\nfunction Navbar(props) {\n  \n        return (\n            <nav className='navbar'>\n                <ul>\n                    <li className='brand'>\n                        <a onClick={props.changeRoute}>Daily Memory Game</a>\n                    </li>\n                    <li>   | Top Score: {props.topScore}</li>\n                    <li>Score: {props.score}</li>\n                      \n                </ul>\n            </nav>\n        );\n    }\n\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport friends from \"../friends.json\";\nimport GameCard from \"../Gamecard.js\";\nimport Wrapper from \"../Wrapper.js\";\n\nimport Footer from \"../Footer.js\";\nimport Title from \"../Title.js\";\n// import Header from \"../Header.js\";\nimport Navbar from \"../Navbar.js\";\nclass Game extends Component {\n  state = {\n    friends: friends,\n    score:0,\n    topScore:0\n  };\n\n  componentDidMount() {\n    this.setState({ friends: this.shuffleData(this.state.friends) });\n  }\n  shuffleData = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n  resetData = data => {\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffleData(resetData);\n  };\n  handleCorrectGuess = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = Math.max(newScore, topScore);\n\n    this.setState({\n      friends: this.shuffleData(newData),\n      score: newScore,\n      topScore: newTopScore\n    });\n  };\n\n  handleIncorrectGuess = data => {\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n    });\n  };\n\n  handleItemClick = id => {\n    let guessedCorrectly = false;\n    console.log('hi');\n    const newData = this.state.friends.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n\n    guessedCorrectly\n      ? this.handleCorrectGuess(newData)\n      : this.handleIncorrectGuess(newData);\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} topScore={this.state.topScore} changeRoute={this.props.changeRoute} />\n      \n        <Title>Click Game</Title>\n        <Wrapper>\n        {this.state.friends.map((friend,i) => (\n        <GameCard\n          key={i}\n          id={friend.id}\n          image={friend.image}\n          handleClick={this.handleItemClick}\n          />\n          ))}\n        </Wrapper>\n       <Footer />\n      </div>\n    );\n  }\n}\n\n\n\nexport default Game;\n","\nimport React, { Component } from 'react';\nimport \"../../components/Landingpage/LandingBtn.css\";\n// import Game from \"../../components/game/game.js\"\nimport { Button } from 'reactstrap';\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction LandingBtn  (props) {\n      return (\n          <div className='landing-btn'>\n\n              <a onClick={props.changeRoute}>\n              <Button outline color=\"primary\">Click Here to start</Button>\n              </a>\n              \n          </div>\n      );\n}\nexport default LandingBtn;\n","import React from \"react\";\nimport '../styles/index.css';\nimport \"../styles/App.css\";\nimport LandingBtn from \"./Landingpage/LandingBtn\";\n\nfunction Header(props) {\n   \n        return (\n            <header>\n                <div className='header'>\n                <div className='headerContainer'>\n                    <h1>Daily Memory Game!</h1>\n                    <h2>Challenge yourself.</h2>\n                       <strong>Can you remember the most influential people of the 21 century?</strong>\n                    <p>Work your brain out. Click each human face once. \n                       To loose click the same face twice, the game will reset</p>\n                       <LandingBtn changeRoute={props.changeRoute}/>\n                </div>\n               \n                </div>\n            </header>\n        );\n    }\n\n\nexport default Header;","import React from \"react\";\n// import LandingBtn from \"../../components/Landingpage/LandingBtn.js\";\nimport Navbar from \"../Navbar.js\";\nimport Header from \"../Header.js\";\nimport Footer from \"../Footer.js\";\n\nfunction LandingPage(props) {\n\n  return (\n        <div>\n          <Navbar />\n          \n          <Header changeRoute={props.changeRoute}>\n            </Header>\n            \n            <Footer />\n    \n      </div>\n      \n    );\n  }\n  \n    \n      export default LandingPage;\n      ","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Game from \"./components/game/game.js\";\nimport LandingPage from \"./components/Landingpage/Landingpage.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.changeRoute = this.changeRoute.bind(this)\n    this.state = {\n      homeRoute: true\n    }\n  }\n  changeRoute() {\n    this.setState({homeRoute: !this.state.homeRoute})\n  }\n  render() {\n    return (\n      <Router>\n        <div>\n          {this.state.homeRoute ?\n            <LandingPage changeRoute={this.changeRoute} />\n            : <Game changeRoute={this.changeRoute} />\n            }\n          {/* <LandingPage />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/game\" component={Game} />\n          </Switch> */}\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./styles/index.css\";\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css'\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}